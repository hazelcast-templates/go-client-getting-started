# Go Client Getting Started

## What You’ll Learn

This tutorial will get you started with the Hazelcast Go client and manipulate a map.

## Before you Begin

* Go 1.18 or above
* A text editor or IDE

### Setup the Environment

1. Install the requirements
   ```
   go mod tidy
   ```

## 1. Understanding the Go Client

The `cmd/1-welcome.go` example starts a Hazelcast client with default configuration, connects to your cluster before shutting the client down at the end.

```
go run ./cmd/1-welcome.go
```

To understand and use the client, review the [Go API documentation](https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client) to better understand what is possible.

## 2. Understanding the Hazelcast SQL API

Hazelcast SQL API is a Calcite SQL based interface to allow you to interact with Hazelcast much like any other datastore.

In the `cmd/2-sql-api.go` example, we will create a map and insert into it, entries where the keys are ids and the values are defined as an object representing a city.

```
go run ./cmd/2-sql-api.go
```

The output of this code is given below:

```
Creating the mapping...OK.
Inserting data...OK.
Fetching cities...OK.
--Results of SELECT __key, this FROM cities
|   id |              country |                 city |      population |
|    2 |       United Kingdom |           Manchester |         2770434 |
|    6 |              Türkiye |               Ankara |         5309690 |
|    1 |       United Kingdom |               London |         9540576 |
|    7 |               Brazil |           Sao Paulo  |        22429800 |
|    5 |              Türkiye |             Istanbul |        15636243 |
|    4 |        United States |          Los Angeles |         3985520 |
|    3 |        United States |             New York |        19223191 |
```

Note: Ordering of the keys is NOT enforced and results may NOT correspond to insertion order.

## Summary

In this tutorial, you learned how to get started with the Hazelcast Go Client, connect to a Hazelcast instance and put data into a distributed map.

## See Also

There are a lot of things that you can do with the Go Client.
For more, such as how you can query a map with predicates and SQL, check out our [Go Client repository](https://github.com/hazelcast/hazelcast-go-client) and our [Go API documentation](https://pkg.go.dev/github.com/hazelcast/hazelcast-go-client) to better understand what is possible.

If you have any questions, suggestions, or feedback please do not hesitate to reach out to us via [Hazelcast Community Slack](https://slack.hazelcast.com/).
Also, please take a look at [the issue list](https://github.com/hazelcast/hazelcast-go-client/issues) if you would like to contribute to the client.
